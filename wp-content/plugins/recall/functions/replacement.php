<?phprequire_once('includes.php');function get_basedir_image_rcl($path){	$dir = explode('/',$path);	$cnt = count($dir) - 2;	for($a=0;$a<=$cnt;$a++){		$base_path .= $dir[$a].'/';	}	return $base_path;}function stripslashes_deep($value) {	if ( is_array($value) ) {		$value = array_map('stripslashes_deep', $value);	} elseif ( is_object($value) ) {		$vars = get_object_vars( $value );		foreach ($vars as $key=>$data) {			$value->{$key} = stripslashes_deep( $data );		}	} elseif ( is_string( $value ) ) {		$value = stripslashes($value);	}	return $value;}function esc_textarea( $text ) {	return $safe_text = htmlspecialchars( $text, ENT_QUOTES, get_option( 'blog_charset' ) );	//return apply_filters( 'esc_textarea', $safe_text, $text );}function wp_get_attachment_image_src($post_id,$size = 'thumbnail'){	global $wpdb;	$meta = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."postmeta WHERE meta_key = '_wp_attachment_metadata' AND post_id='$post_id'");	$meta = unserialize($meta);	//print_r($meta);	if(!$meta['sizes']) $url = $meta['file'];	else $url = get_basedir_image_rcl($meta['file']).'/'.$meta['sizes'][$size]['file'];		$img[] = '/wp-content/uploads/'.$url;	return $img;}if(!function_exists('custom_avatar_recall')):	add_filter('get_avatar','custom_avatar_recall', 1, 5);		function custom_avatar_recall($avatar, $id_or_email, $size, $default, $alt){		global $wpdb;		if (is_numeric($id_or_email)){			$avatar_id = get_option('avatar_user_'.$id_or_email);			//if(!$avatar_id) $avatar_id = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."usermeta WHERE meta_key = 'ulogin_photo' AND user_id='id_or_email'");			if($avatar_id){				$image_attributes = wp_get_attachment_image_src($avatar_id); 				$avatar = "<img class='avatar' src='".$image_attributes[0]."' alt='".$alt."' height='".$size."' width='".$size."' />";				}		}elseif( is_object($id_or_email)){			$avatar_id = get_option('avatar_user_'.$id_or_email->user_id);			if ( !empty($id_or_email->user_id) && $avatar_id ){ 				$image_attributes = wp_get_attachment_image_src($avatar_id); 				$avatar = "<img class='avatar' src='".$image_attributes[0]."' alt='".$alt."' height='".$size."' width='".$size."' />";			}		}		if ( !empty($id_or_email->user_id)) $avatar = '<a height="'.$size.'" width="'.$size.'" href="'.get_author_posts_url($id_or_email->user_id).'">'.$avatar.'</a>';				return $avatar;			}endif;function get_avatar( $id_or_email, $size = '96', $default = '', $alt = false ) {	global $wpdb;		$default = get_wpurl().'/wp-content/plugins/recall/img/guest.png';		if ( ! get_option('show_avatars') )		return false;	if ( false === $alt)		$safe_alt = '';	else		$safe_alt = esc_attr( $alt );	if ( !is_numeric($size) )		$size = '96';	$email = '';	if ( is_numeric($id_or_email) ) {		$id = (int) $id_or_email;		$user = $wpdb->get_results("SELECT * FROM ".$wpdb->prefix."users WHERE ID = '$id'");		if ( $user )			$email = $user->user_email;	} elseif ( is_object($id_or_email) ) {				$allowed_comment_types = apply_filters( 'get_avatar_comment_types', array( 'comment' ) );		if ( ! empty( $id_or_email->comment_type ) && ! in_array( $id_or_email->comment_type, (array) $allowed_comment_types ) )			return false;		if ( ! empty( $id_or_email->user_id ) ) {			$id = (int) $id_or_email->user_id;			$user = get_userdata($id);			if ( $user )				$email = $user->user_email;		}		if ( ! $email && ! empty( $id_or_email->comment_author_email ) )			$email = $id_or_email->comment_author_email;	} else {		$email = $id_or_email;	}	if ( empty($default) ) {		$avatar_default = get_option('avatar_default');		if ( empty($avatar_default) )			$default = 'mystery';		else			$default = $avatar_default;	}	if ( !empty($email) )		$email_hash = md5( strtolower( trim( $email ) ) );	if ( is_ssl() ) {		$host = 'https://secure.gravatar.com';	} else {		if ( !empty($email) )			$host = sprintf( "http://%d.gravatar.com", ( hexdec( $email_hash[0] ) % 2 ) );		else			$host = 'http://0.gravatar.com';	}	if ( 'mystery' == $default )		$default = "$host/avatar/ad516503a11cd5ca435acc9bb6523536?s={$size}"; // ad516503a11cd5ca435acc9bb6523536 == md5('unknown@gravatar.com')	elseif ( 'blank' == $default )		$default = $email ? 'blank' : includes_url( 'images/blank.gif' );	elseif ( !empty($email) && 'gravatar_default' == $default )		$default = '';	elseif ( 'gravatar_default' == $default )		$default = "$host/avatar/?s={$size}";	elseif ( empty($email) )		$default = "$host/avatar/?d=$default&amp;s={$size}";	elseif ( strpos($default, 'http://') === 0 )		$default = add_query_arg( 's', $size, $default );	if ( !empty($email) ) {		$out = "$host/avatar/";		$out .= $email_hash;		$out .= '?s='.$size;		$out .= '&amp;d=' . urlencode( $default );		$rating = get_option('avatar_rating');		if ( !empty( $rating ) )			$out .= "&amp;r={$rating}";		$out = str_replace( '&#038;', '&amp;', esc_url( $out ) );		$avatar = "<img alt='{$safe_alt}' src='{$out}' class='avatar avatar-{$size} photo' height='{$size}' width='{$size}' />";	} else {		$avatar = "<img alt='{$safe_alt}' src='{$default}' class='avatar avatar-{$size} photo avatar-default' height='{$size}' width='{$size}' />";	}	return apply_filters( 'get_avatar', $avatar, $id_or_email, $size, $default, $alt );}function get_wpurl(){	global $wpdb;	$wpurl = $wpdb->get_var("SELECT option_value FROM ".$wpdb->prefix."options WHERE option_name = 'siteurl'");	return $wpurl;}function get_the_author_meta($key,$user_id){	global $wpdb;	if($key=='display_name'||$key=='user_email'){		$value = $wpdb->get_var("SELECT $key FROM ".$wpdb->prefix."users WHERE ID='$user_id'");	}else{		$value = get_usermeta($user_id, $key);	}	return $value;}function get_usermeta($user_id, $key){	global $wpdb;	$value = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."usermeta WHERE meta_key = '$key' AND user_id='$user_id'");	return $value;}function update_usermeta($user_id, $key, $value){	global $wpdb;		$val = get_usermeta($user_id, $key);	if($val){		$res = $wpdb->update( $wpdb->prefix.'usermeta', 			array('meta_value' => $value), 			array(				'meta_key' => $key, 				'user_id' => $user_id			) 		);	}else{		$res = add_usermeta($user_id, $key, $value);	}	return $res;}function add_usermeta($user_id, $key, $value){	global $wpdb;	$res = $wpdb->insert( $wpdb->prefix.'usermeta', 			array('meta_value' => $value,'meta_key' => $key, 'user_id' => $user_id)		);	return $res;}function delete_usermeta($user_id, $key){	global $wpdb;	$res = $wpdb->query("DELETE FROM ".$wpdb->prefix."usermeta WHERE user_id ='$user_id' AND meta_key='$key'");	return $res;}function has_post_thumbnail($post_id){	global $wpdb;	$thumb_id = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."postmeta WHERE meta_key = '_thumbnail_id' AND post_id='$post_id'");	return $thumb_id;}function get_the_post_thumbnail($post_id,$size,$attr){	global $wpdb;	$thumb_id = $wpdb->get_var("SELECT meta_value FROM ".$wpdb->prefix."postmeta WHERE meta_key = '_thumbnail_id' AND post_id='$post_id'");	$image_attr = wp_get_attachment_image_src($thumb_id,$size);	$image = '<img src="'.$image_attr[0].'" '.$attr.'>';	return $image;}function get_comments_number( $post_id ){	global $wpdb;	$cnt = $wpdb->get_var("SELECT COUNT(comment_ID) FROM ".$wpdb->prefix."comments WHERE comment_post_ID = '$post_id'");	return $cnt;}function get_comment_link($comment_id){	global $wpdb;	$post_id = $wpdb->get_var("SELECT comment_post_ID FROM ".$wpdb->prefix."comments WHERE comment_ID = '$comment_id'");	$url = '/?p='.$post_id.'#comment-'.$comment_id;	return $url;}function get_author_posts_url($user_id){	global $rcl_options;	if($rcl_options['view_user_lk_rcl']!=1) return get_wpurl().'/?author='.$user_id;	$get = 'user';	if($rcl_options['link_user_lk_rcl']!='') $get = $rcl_options['link_user_lk_rcl'];	return get_wpurl().'/?p='.$rcl_options['lk_page_rcl'].'&'.$get.'='.$user_id;}function wp_mail($to, $title, $mess, $headers){	mail($to, $title, $mess, $headers);}?>