<?phpadd_filter('widget_text', 'do_shortcode');add_action( 'widgets_init', 'widget_new_author' );function widget_new_author() {	register_widget( 'Widget_new_author' );}class Widget_new_author extends WP_Widget {	function Widget_new_author() {		$widget_ops = array( 'classname' => 'widget-new-author', 'description' => __('Новые пользователи на сайте','rcl') );				$control_ops = array( 'width' => 300, 'height' => 350, 'id_base' => 'widget-new-author' );				$this->WP_Widget( 'widget-new-author', __('Новые пользователи','rcl'), $widget_ops, $control_ops );	}		function widget( $args, $instance ) {		extract( $args );		$title = apply_filters('widget_title', $instance['title'] );		$count_user = $instance['count_user'];		$all = $instance['page_all_users'];				if ( !$count_user ) $count_user = 12;								echo $before_widget;		if ( $title )			echo $before_title . $title . $after_title;					global $wpdb;		$user_list = $wpdb->get_results("SELECT * FROM ".$wpdb->prefix ."users ORDER BY id DESC LIMIT ".$count_user);		echo '<div class="new-author-recall">';		foreach((array)$user_list as $user){				echo '<div class="author-avatar-list">';				echo '<a href="'.get_author_posts_url($user->ID).'" title="'.$user->display_name.'" alt="'.$user->display_name.'">';				echo get_avatar($user->ID, 50);				echo '</a>';				echo '</div>';						}		if($all) echo '<p class="clear alignright"><a href="'.get_permalink($all).'">'.__('Все пользователи','rcl').'</a></p>';		echo '</div>';				echo $after_widget;	}	//Update the widget 	 	function update( $new_instance, $old_instance ) {		$instance = $old_instance;		//Strip tags from title and name to remove HTML 		$instance['title'] = strip_tags( $new_instance['title'] );		$instance['count_user'] = $new_instance['count_user'];		$instance['page_all_users'] = $new_instance['page_all_users'];		return $instance;	}		function form( $instance ) {		//Set up some default widget settings.		$defaults = array( 'title' => __('Новые пользователи:','rcl'), 'count_user' => '12');		$instance = wp_parse_args( (array) $instance, $defaults ); ?>		<p>			<label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e('Заголовок','rcl'); ?>:</label>			<input id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" value="<?php echo $instance['title']; ?>" style="width:100%;" />		</p>		<p>			<label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e('Количество выводимых пользователей','rcl'); ?>:</label>			<input id="<?php echo $this->get_field_id( 'count_user' ); ?>" name="<?php echo $this->get_field_name( 'count_user' ); ?>" value="<?php echo $instance['count_user']; ?>" style="width:100%;" />		</p>		<?php			$args = array(    				'selected'   => $instance['page_all_users'],   				'name'       => $this->get_field_name( 'page_all_users' ),				'show_option_none' => __('Не выбрано','rcl'),				'echo'       => 0  			);		?>		<p>			<label for="<?php echo $this->get_field_id( 'page_all_users' ); ?>"><?php _e('Страница всех пользователей','rcl'); ?>:</label>			<?php echo wp_dropdown_pages( $args ); ?>		</p>	<?php	}}add_action( 'widgets_init', 'widget_author_profil' );function widget_author_profil() {	register_widget( 'Widget_author_profil' );}class Widget_author_profil extends WP_Widget {	function Widget_author_profil() {		$widget_ops = array( 'classname' => 'widget_author_profil', 'description' => __('Блок с основной информацией профиля','rcl') );				$control_ops = array( 'width' => 300, 'height' => 350, 'id_base' => 'widget-author-profil' );				$this->WP_Widget( 'widget-author-profil', __('Профиль пользователя','rcl'), $widget_ops, $control_ops );	}		function widget( $args, $instance ) {		extract( $args );		$title = apply_filters('widget_title', $instance['title'] );		echo $before_widget;		global $post,$wpdb,$user_ID,$rcl_user_URL,$rcl_options;				if($user_ID){				if ( $title )			echo $before_title . $title . $after_title;				echo '<div class="panel_lk_recall">';				echo '<p style="margin:0;"><b>'.__('Привет,','rcl').' '.get_the_author_meta('display_name', $user_ID).'!</b></p>';				echo '<div class="author-avatar" style="margin-bottom:0px">';				echo get_avatar($user_ID, 60);				echo '</div>';								echo '<a href="'.$rcl_user_URL.'">';				echo '<input type="button" class="recall-button" value="'.__('Личный кабинет','rcl').'">';				echo '</a></br />';				if($rcl_options['rayt_comment_user_rayt']==1||$rcl_options['rayt_post_user_rayt']==1||get_option('incentive_referal')==1):					$karma = apply_filters('get_all_rayt_user_rcl',0,$user_ID);					echo '<p class="widget-rait">'.__('Рейтинг','rcl').': '.raytout($karma).'</p>';				endif;				echo '<a href="'.wp_logout_url( home_url() ).'" title="'.__('Выход','rcl').'"><input type="button" class="recall-button" value="'.__('Выход','rcl').'"></a>';								if($user_ID==1){									}												echo '</div>';			} else {			if ( $title )			echo $before_title . $title . $after_title;				echo get_authorize_form_rcl();			}				echo $after_widget;	}	//Update the widget 	 	function update( $new_instance, $old_instance ) {		$instance = $old_instance;		//Strip tags from title and name to remove HTML 		$instance['title'] = strip_tags( $new_instance['title'] );		return $instance;	}		function form( $instance ) {		//Set up some default widget settings.		$defaults = array( 'title' => __('Панель управления','rcl'));		$instance = wp_parse_args( (array) $instance, $defaults ); ?>		<p>			<label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e('Заголовок','rcl'); ?>:</label>			<input id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" value="<?php echo $instance['title']; ?>" style="width:100%;" />		</p>	<?php	}} add_action( 'widgets_init', 'widget_online_users' );function widget_online_users() {	register_widget( 'Widget_online_users' );}class Widget_online_users extends WP_Widget {	function Widget_online_users() {		$widget_ops = array( 'classname' => 'widget_online_users', 'description' => __('Вывод пользователей в сети','rcl') );				$control_ops = array( 'width' => 300, 'height' => 350, 'id_base' => 'online-users-widget' );				$this->WP_Widget( 'online-users-widget', __('Пользователи в сети','rcl'), $widget_ops, $control_ops );	}		function widget( $args, $instance ) {		extract( $args );		//Our variables from the widget settings.		$title = apply_filters('widget_title', $instance['title'] );		$all = $instance['page_all_users'];				echo $before_widget;		// Display the widget title 		if ( $title )			echo $before_title . $title . $after_title;					global $wpdb;						$rcl_action_users = $wpdb->get_results("SELECT * FROM ".RCL_PREF."user_action ORDER BY time_action DESC LIMIT 10");				$names = get_names_array_rcl($rcl_action_users,'user');		//print_r($username);				echo '<div class="author-online">';			foreach((array)$rcl_action_users as $user){				$last_action = last_user_action_recall($user->time_action);				if(!$last_action){					$online = true;										echo '<div class="author-avatar-list">';					if($user->user!=0){						echo '<a href="'.get_author_posts_url($user->user).'" title="'.$names[$user->user].'" alt="'.$names[$user->user].'">';						echo get_avatar($user->user, 50);						echo '</a>';					}else{						echo get_avatar($user->user, 50,get_bloginfo('wpurl').'/wp-content/plugins/recall/img/guest.png','Гость');					}					echo '</div>';								}					}					if($all) echo '<p class="clear alignright"><a href="'.get_permalink($all).'">'.__('Все пользователи','rcl').'</a></p>';		echo '</div>';					if(!$online) echo '<p align="center">'.__('Никого нет','rcl').'</p>';									echo $after_widget;	}	//Update the widget 	 	function update( $new_instance, $old_instance ) {		$instance = $old_instance;		//Strip tags from title and name to remove HTML 		$instance['title'] = strip_tags( $new_instance['title'] );		$instance['page_all_users'] = $new_instance['page_all_users'];		return $instance;	}		function form( $instance ) {		//Set up some default widget settings.		$defaults = array( 'title' => __('Сейчас в сети:','rcl'));		$instance = wp_parse_args( (array) $instance, $defaults ); ?>		<p>			<label for="<?php echo $this->get_field_id( 'title' ); ?>"><?php _e('Заголовок','rcl'); ?>:</label>			<input id="<?php echo $this->get_field_id( 'title' ); ?>" name="<?php echo $this->get_field_name( 'title' ); ?>" value="<?php echo $instance['title']; ?>" style="width:100%;" />		</p>		<?php			$args = array(    				'selected'   => $instance['page_all_users'],   				'name'       => $this->get_field_name( 'page_all_users' ),				'show_option_none' => __('Не выбрано','rcl'),				'echo'       => 0  			);		?>		<p>			<label for="<?php echo $instance['page_all_users']; ?>"><?php _e('Страница всех пользователей','rcl'); ?>:</label>			<?php echo wp_dropdown_pages( $args ); ?>		</p>	<?php	}}  ?>